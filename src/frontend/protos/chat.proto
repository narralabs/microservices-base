// WARNING: This file is auto-generated. DO NOT MODIFY.
syntax = "proto3";

package chat;

// The chat service definition
service ChatService {
  // Process a chat message and extract any order information
  rpc ProcessChat (ChatRequest) returns (ChatResponse) {}

  // Stream chat responses as they are generated
  rpc StreamChat (ChatRequest) returns (stream ChatStreamResponse) {}
}

// Message in conversation history
message ChatMessage {
  string role = 1;  // "user" or "assistant"
  string content = 2;
}

// The request message containing the chat text
message ChatRequest {
  string text = 1;
  repeated ChatMessage history = 2;
}

// The response message containing the chat response and any orders
message ChatResponse {
  string response = 1;
  repeated Order orders = 2;
}

// Represents an order action (add or remove items)
message Order {
  enum Action {
    ADD = 0;
    REMOVE = 1;
  }
  Action action = 1;
  string item = 2;
  int32 quantity = 3;
}

// Streaming response message containing text chunks
message ChatStreamResponse {
  string content = 1;
  bool is_final = 2;
  repeated Order orders = 3;
  string final_message = 4;
}
